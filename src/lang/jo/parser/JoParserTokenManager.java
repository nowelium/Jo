/* Generated By:JJTree&JavaCC: Do not edit this line. JoParserTokenManager.java */
package lang.jo.parser;
import lang.jo.parser.node.QuoteType;

public class JoParserTokenManager implements JoParserConstants
{
    void CommonTokenAction(Token t) {
    }
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 44:
         return jjStopAtPos(0, 29);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 151;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xf400ec7200000000L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                  }
                  else if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 7);
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 24)
                        kind = 24;
                  }
                  else if (curChar == 35)
                  {
                     if (kind > 25)
                        kind = 25;
                     jjCheckNAddStates(8, 12);
                  }
                  else if (curChar == 59)
                  {
                     if (kind > 22)
                        kind = 22;
                  }
                  else if (curChar == 41)
                  {
                     if (kind > 60)
                        kind = 60;
                  }
                  else if (curChar == 40)
                  {
                     if (kind > 56)
                        kind = 56;
                  }
                  else if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 52;
                  else if (curChar == 39)
                     jjCheckNAddStates(13, 15);
                  if ((0x3fe000000000000L & l) != 0L)
                  {
                     if (kind > 33)
                        kind = 33;
                     jjCheckNAddTwoStates(76, 77);
                  }
                  else if ((0x100001200L & l) != 0L)
                  {
                     if (kind > 23)
                        kind = 23;
                     jjAddStates(16, 17);
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                     jjCheckNAddTwoStates(67, 68);
                  }
                  else if (curChar == 47)
                     jjAddStates(18, 27);
                  else if (curChar == 48)
                  {
                     if (kind > 33)
                        kind = 33;
                     jjCheckNAddStates(28, 31);
                  }
                  else if (curChar == 46)
                     jjCheckNAddTwoStates(79, 83);
                  else if (curChar == 34)
                     jjCheckNAddStates(32, 34);
                  else if (curChar == 36)
                     jjCheckNAddStates(35, 39);
                  else if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 2;
                  if (curChar == 13)
                     jjAddStates(40, 44);
                  break;
               case 1:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 2:
                  if (curChar == 36)
                     jjCheckNAddStates(35, 39);
                  break;
               case 3:
                  if ((0x401601000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(35, 39);
                  break;
               case 4:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(45, 50);
                  break;
               case 7:
                  if ((0x280000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 8:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(51, 55);
                  break;
               case 9:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(56, 60);
                  break;
               case 10:
                  if (curChar != 48)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(61, 67);
                  break;
               case 11:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(68, 73);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(74, 77);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(13, 14);
                  break;
               case 15:
                  if ((0x280000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(78, 82);
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(83, 91);
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(18, 19);
                  break;
               case 19:
                  if (curChar != 46)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(92, 97);
                  break;
               case 21:
                  if ((0x280000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 22:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(98, 102);
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(103, 111);
                  break;
               case 24:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(112, 121);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(122, 127);
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(128, 136);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(137, 145);
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(146, 155);
                  break;
               case 31:
                  jjCheckNAddStates(156, 158);
                  break;
               case 33:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAddStates(156, 158);
                  break;
               case 35:
                  if (curChar == 39)
                     jjCheckNAddStates(13, 15);
                  break;
               case 36:
                  jjCheckNAddStates(13, 15);
                  break;
               case 38:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAddStates(13, 15);
                  break;
               case 39:
                  if (curChar == 39 && kind > 43)
                     kind = 43;
                  break;
               case 40:
                  if (curChar == 34)
                     jjCheckNAddStates(32, 34);
                  break;
               case 41:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddStates(32, 34);
                  break;
               case 43:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAddStates(32, 34);
                  break;
               case 44:
                  if (curChar == 34 && kind > 44)
                     kind = 44;
                  break;
               case 45:
                  if (curChar == 34)
                     jjCheckNAddStates(159, 161);
                  break;
               case 46:
                  if ((0xffffff7bffffffffL & l) != 0L)
                     jjCheckNAddStates(159, 161);
                  break;
               case 48:
                  if ((0x8400000000L & l) != 0L)
                     jjCheckNAddStates(159, 161);
                  break;
               case 49:
                  if (curChar == 34 && kind > 45)
                     kind = 45;
                  break;
               case 50:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 53:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if (curChar == 40 && kind > 56)
                     kind = 56;
                  break;
               case 55:
                  if (curChar == 41 && kind > 60)
                     kind = 60;
                  break;
               case 56:
                  if ((0x100001200L & l) == 0L)
                     break;
                  if (kind > 23)
                     kind = 23;
                  jjAddStates(16, 17);
                  break;
               case 57:
                  if (curChar == 59 && kind > 22)
                     kind = 22;
                  break;
               case 58:
                  if (curChar == 59 && kind > 25)
                     kind = 25;
                  break;
               case 59:
                  if ((0x100003600L & l) != 0L && kind > 24)
                     kind = 24;
                  break;
               case 60:
                  if (curChar != 35)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAddStates(8, 12);
                  break;
               case 61:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAdd(61);
                  break;
               case 62:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(62);
                  break;
               case 63:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAdd(63);
                  break;
               case 64:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAdd(64);
                  break;
               case 65:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAdd(65);
                  break;
               case 66:
                  if ((0x2400L & l) == 0L)
                     break;
                  if (kind > 22)
                     kind = 22;
                  jjCheckNAddTwoStates(67, 68);
                  break;
               case 67:
                  if ((0x100001200L & l) != 0L && kind > 22)
                     kind = 22;
                  break;
               case 68:
                  if ((0x100001200L & l) != 0L && kind > 25)
                     kind = 25;
                  break;
               case 69:
                  if (curChar == 13)
                     jjAddStates(40, 44);
                  break;
               case 70:
                  if (curChar != 10)
                     break;
                  if (kind > 22)
                     kind = 22;
                  jjCheckNAdd(67);
                  break;
               case 71:
                  if (curChar == 10 && kind > 22)
                     kind = 22;
                  break;
               case 72:
                  if (curChar == 10 && kind > 25)
                     kind = 25;
                  break;
               case 73:
                  if (curChar != 10)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAdd(68);
                  break;
               case 74:
                  if (curChar == 10 && kind > 28)
                     kind = 28;
                  break;
               case 75:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(76, 77);
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(76);
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAdd(77);
                  break;
               case 78:
                  if (curChar == 46)
                     jjCheckNAddTwoStates(79, 83);
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(79, 80);
                  break;
               case 81:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(82);
                  break;
               case 82:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(82);
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddTwoStates(83, 84);
                  break;
               case 85:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(86);
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAdd(86);
                  break;
               case 87:
                  if (curChar != 48)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddStates(28, 31);
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 90:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(90);
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 93:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAdd(93);
                  break;
               case 94:
                  if (curChar == 47)
                     jjAddStates(18, 27);
                  break;
               case 95:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(96, 97);
                  break;
               case 96:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(96, 97);
                  break;
               case 97:
                  if (curChar == 42)
                     jjCheckNAddStates(162, 164);
                  break;
               case 98:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(99, 97);
                  break;
               case 99:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(99, 97);
                  break;
               case 100:
                  if (curChar == 47 && kind > 25)
                     kind = 25;
                  break;
               case 101:
                  if (curChar != 47)
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjCheckNAdd(61);
                  break;
               case 102:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(103, 104);
                  break;
               case 103:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(103, 104);
                  break;
               case 104:
                  if (curChar == 42)
                     jjCheckNAddStates(165, 167);
                  break;
               case 105:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(106, 104);
                  break;
               case 106:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(106, 104);
                  break;
               case 107:
                  if (curChar == 47 && kind > 26)
                     kind = 26;
                  break;
               case 108:
                  if (curChar != 47)
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjCheckNAdd(62);
                  break;
               case 109:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(110, 111);
                  break;
               case 110:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(110, 111);
                  break;
               case 111:
                  if (curChar == 42)
                     jjCheckNAddStates(168, 170);
                  break;
               case 112:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(113, 111);
                  break;
               case 113:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(113, 111);
                  break;
               case 114:
                  if (curChar == 47 && kind > 27)
                     kind = 27;
                  break;
               case 115:
                  if (curChar != 47)
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjCheckNAdd(63);
                  break;
               case 116:
                  if (curChar != 47)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAdd(64);
                  break;
               case 117:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(118, 119);
                  break;
               case 118:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(118, 119);
                  break;
               case 119:
                  if (curChar == 42)
                     jjCheckNAddStates(171, 173);
                  break;
               case 120:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(121, 119);
                  break;
               case 121:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(121, 119);
                  break;
               case 122:
                  if (curChar == 47 && kind > 39)
                     kind = 39;
                  break;
               case 123:
                  if (curChar != 47)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAdd(65);
                  break;
               case 124:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(125, 126);
                  break;
               case 125:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(125, 126);
                  break;
               case 126:
                  if (curChar == 42)
                     jjCheckNAddStates(174, 176);
                  break;
               case 127:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(128, 126);
                  break;
               case 128:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(128, 126);
                  break;
               case 129:
                  if (curChar == 47 && kind > 41)
                     kind = 41;
                  break;
               case 130:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 7);
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(131, 132);
                  break;
               case 133:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(134);
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(134);
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(135, 136);
                  break;
               case 136:
                  if (curChar != 46)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(137, 138);
                  break;
               case 137:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAddTwoStates(137, 138);
                  break;
               case 139:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(140);
                  break;
               case 140:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(140);
                  break;
               case 141:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(141, 142);
                  break;
               case 142:
                  if (curChar != 46)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddTwoStates(143, 144);
                  break;
               case 143:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddTwoStates(143, 144);
                  break;
               case 145:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(146);
                  break;
               case 146:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAdd(146);
                  break;
               case 147:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(147, 148);
                  break;
               case 149:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(150);
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAdd(150);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(35, 39);
                  else if ((0x5000000050000001L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                  }
                  else if ((0x2000000020000000L & l) != 0L)
                  {
                     if (kind > 60)
                        kind = 60;
                  }
                  else if ((0x800000008000000L & l) != 0L)
                  {
                     if (kind > 56)
                        kind = 56;
                  }
                  else if (curChar == 96)
                     jjCheckNAddStates(156, 158);
                  break;
               case 2:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(35, 39);
                  break;
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(35, 39);
                  break;
               case 6:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(177, 178);
                  break;
               case 14:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(179, 180);
                  break;
               case 20:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(181, 182);
                  break;
               case 25:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(26);
                  break;
               case 26:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 30)
                     kind = 30;
                  jjCheckNAddStates(122, 127);
                  break;
               case 30:
                  if (curChar == 96)
                     jjCheckNAddStates(156, 158);
                  break;
               case 31:
                  jjCheckNAddStates(156, 158);
                  break;
               case 32:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 33:
                  if ((0x14404510000000L & l) != 0L)
                     jjCheckNAddStates(156, 158);
                  break;
               case 34:
                  if (curChar == 96 && kind > 42)
                     kind = 42;
                  break;
               case 36:
                  if ((0xfffffffL & l) != 0L)
                     jjCheckNAddStates(13, 15);
                  break;
               case 37:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 38:
                  if ((0x14404510000000L & l) != 0L)
                     jjCheckNAddStates(13, 15);
                  break;
               case 41:
                  jjCheckNAddStates(32, 34);
                  break;
               case 42:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 43:
                  if ((0x14404510000000L & l) != 0L)
                     jjCheckNAddStates(32, 34);
                  break;
               case 46:
                  if ((0xfffffffeffffffffL & l) != 0L)
                     jjCheckNAddStates(159, 161);
                  break;
               case 47:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 48:
                  if ((0x14404510000000L & l) != 0L)
                     jjCheckNAddStates(159, 161);
                  break;
               case 54:
                  if ((0x800000008000000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 55:
                  if ((0x2000000020000000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 61:
                  if (kind > 25)
                     kind = 25;
                  jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 62:
                  if (kind > 26)
                     kind = 26;
                  jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 63:
                  if (kind > 27)
                     kind = 27;
                  jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 64:
                  if (kind > 39)
                     kind = 39;
                  jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 65:
                  if (kind > 40)
                     kind = 40;
                  jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 80:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(183, 184);
                  break;
               case 84:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(185, 186);
                  break;
               case 88:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(89);
                  break;
               case 89:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  jjCheckNAdd(89);
                  break;
               case 91:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(92);
                  break;
               case 92:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 34)
                     kind = 34;
                  jjCheckNAdd(92);
                  break;
               case 96:
                  jjCheckNAddTwoStates(96, 97);
                  break;
               case 98:
               case 99:
                  jjCheckNAddTwoStates(99, 97);
                  break;
               case 103:
                  jjCheckNAddTwoStates(103, 104);
                  break;
               case 105:
               case 106:
                  jjCheckNAddTwoStates(106, 104);
                  break;
               case 110:
                  jjCheckNAddTwoStates(110, 111);
                  break;
               case 112:
               case 113:
                  jjCheckNAddTwoStates(113, 111);
                  break;
               case 118:
                  jjCheckNAddTwoStates(118, 119);
                  break;
               case 120:
               case 121:
                  jjCheckNAddTwoStates(121, 119);
                  break;
               case 125:
                  jjCheckNAddTwoStates(125, 126);
                  break;
               case 127:
               case 128:
                  jjCheckNAddTwoStates(128, 126);
                  break;
               case 132:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(187, 188);
                  break;
               case 138:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(189, 190);
                  break;
               case 144:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(191, 192);
                  break;
               case 148:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(193, 194);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 31:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(156, 158);
                  break;
               case 41:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(32, 34);
                  break;
               case 46:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(159, 161);
                  break;
               case 61:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 25)
                     kind = 25;
                  jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 62:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 26)
                     kind = 26;
                  jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 63:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 27)
                     kind = 27;
                  jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 64:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 65:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 96:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(96, 97);
                  break;
               case 98:
               case 99:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(99, 97);
                  break;
               case 103:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(103, 104);
                  break;
               case 105:
               case 106:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(106, 104);
                  break;
               case 110:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(110, 111);
                  break;
               case 112:
               case 113:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(113, 111);
                  break;
               case 118:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(118, 119);
                  break;
               case 120:
               case 121:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(121, 119);
                  break;
               case 125:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(125, 126);
                  break;
               case 127:
               case 128:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(128, 126);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 151 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   131, 132, 135, 136, 141, 142, 147, 148, 61, 62, 63, 64, 65, 36, 37, 39, 
   57, 58, 95, 101, 102, 108, 109, 115, 116, 117, 123, 124, 88, 90, 91, 93, 
   41, 42, 44, 3, 4, 9, 10, 12, 70, 71, 72, 73, 74, 3, 4, 6, 
   9, 10, 29, 3, 4, 9, 10, 28, 3, 4, 9, 10, 27, 3, 11, 25, 
   4, 9, 10, 12, 3, 11, 4, 9, 10, 12, 13, 14, 18, 19, 3, 4, 
   9, 10, 17, 3, 13, 14, 4, 18, 19, 9, 10, 17, 3, 4, 20, 9, 
   10, 24, 3, 4, 9, 10, 23, 3, 13, 14, 4, 18, 19, 9, 10, 23, 
   3, 13, 14, 4, 18, 19, 20, 9, 10, 24, 3, 26, 4, 9, 10, 12, 
   3, 13, 14, 4, 18, 19, 9, 10, 27, 3, 13, 14, 4, 18, 19, 9, 
   10, 28, 3, 13, 14, 4, 6, 18, 19, 9, 10, 29, 31, 32, 34, 46, 
   47, 51, 97, 98, 100, 104, 105, 107, 111, 112, 114, 119, 120, 122, 126, 127, 
   129, 7, 8, 15, 16, 21, 22, 81, 82, 85, 86, 133, 134, 139, 140, 145, 
   146, 149, 150, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default : 
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, "\54", null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, };
public static final String[] lexStateNames = {
   "DEFAULT", 
};
static final long[] jjtoToken = {
   0x11003fbe7e400003L, 0x1L, 
};
static final long[] jjtoSkip = {
   0x1800000L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x1800000L, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[151];
private final int[] jjstateSet = new int[302];
protected char curChar;
public JoParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public JoParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 151; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      CommonTokenAction(matchedToken);
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedPos == 0 && jjmatchedKind > 64)
   {
      jjmatchedKind = 64;
   }
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         CommonTokenAction(matchedToken);
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
         }
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

}
